complexity,loss,score,equation,sympy_format,lambda_format
1,69.449745,0.0,chem5,chem5,PySRFunction(X=>chem5)
3,8.683595,1.0395838920265534,chem5 * chem3,chem3*chem5,PySRFunction(X=>chem3*chem5)
5,5.789722,0.2026756684094817,(chem5 + chem11) * chem3,chem3*(chem11 + chem5),PySRFunction(X=>chem3*(chem11 + chem5))
7,5.6979303,0.00799063648830482,"(chem5 + min(chem11, chem13)) * chem3","chem3*(chem5 + Piecewise((chem11, chem11 < chem13), (chem13, True)))","PySRFunction(X=>chem3*(chem5 + Piecewise((chem11, chem11 < chem13), (chem13, True))))"
8,5.57162,0.02241714818023223,chem3 * (chem5 + (1.4623362 / log(chem12))),chem3*(chem5 + 1.4623362/log(chem12)),PySRFunction(X=>chem3*(chem5 + 1.4623362/log(chem12)))
9,5.402992,0.030732981256496716,"(chem11 + chem5) * max(chem6 / 0.90311795, chem3)","(chem11 + chem5)*Piecewise((chem3, chem3 > chem6/0.90311795), (chem6/0.90311795, True))","PySRFunction(X=>(chem11 + chem5)*Piecewise((chem3, chem3 > chem6/0.90311795), (chem6/0.90311795, True)))"
10,5.265113,0.02585026635818722,"(chem11 + chem5) * max(chem3, sin(chem14) + chem6)","(chem11 + chem5)*Piecewise((chem6 + sin(chem14), chem3 < chem6 + sin(chem14)), (chem3, True))","PySRFunction(X=>(chem11 + chem5)*Piecewise((chem6 + sin(chem14), chem3 < chem6 + sin(chem14)), (chem3, True)))"
12,5.208882,0.005368681218843084,"max(max(chem3, sin(chem14) + chem6), chem7) * (chem11 + chem5)","(chem11 + chem5)*Piecewise((chem7, ITE(chem3 < chem6 + sin(chem14), chem7 > chem6 + sin(chem14), chem3 < chem7)), (Piecewise((chem6 + sin(chem14), chem3 < chem6 + sin(chem14)), (chem3, True)), True))","PySRFunction(X=>(chem11 + chem5)*Piecewise((chem7, ITE(chem3 < chem6 + sin(chem14), chem7 > chem6 + sin(chem14), chem3 < chem7)), (Piecewise((chem6 + sin(chem14), chem3 < chem6 + sin(chem14)), (chem3, True)), True)))"
13,5.0747128,0.026095313212558386,"max(chem3, 0.696891 + chem6) * (cos(cos(chem9 / -0.10362669)) + chem5)","(chem5 + cos(cos(chem9/(-0.10362669))))*Piecewise((chem6 + 0.696891, chem3 < chem6 + 0.696891), (chem3, True))","PySRFunction(X=>(chem5 + cos(cos(chem9/(-0.10362669))))*Piecewise((chem6 + 0.696891, chem3 < chem6 + 0.696891), (chem3, True)))"
14,4.9348116,0.02795543632858928,"(cos(cos(chem9 / -0.10362669)) + chem5) * max(chem3, sin(chem14) + chem6)","(chem5 + cos(cos(chem9/(-0.10362669))))*Piecewise((chem6 + sin(chem14), chem3 < chem6 + sin(chem14)), (chem3, True))","PySRFunction(X=>(chem5 + cos(cos(chem9/(-0.10362669))))*Piecewise((chem6 + sin(chem14), chem3 < chem6 + sin(chem14)), (chem3, True)))"
16,4.863202,0.0073087135803882606,"(cos(cos(chem9 / -0.10362669)) + chem5) * max(chem3, max(sin(chem14) + chem6, chem7))","(chem5 + cos(cos(chem9/(-0.10362669))))*Piecewise((Piecewise((chem7, chem7 > chem6 + sin(chem14)), (chem6 + sin(chem14), True)), ITE(chem7 > chem6 + sin(chem14), chem3 < chem7, chem3 < chem6 + sin(chem14))), (chem3, True))","PySRFunction(X=>(chem5 + cos(cos(chem9/(-0.10362669))))*Piecewise((Piecewise((chem7, chem7 > chem6 + sin(chem14)), (chem6 + sin(chem14), True)), ITE(chem7 > chem6 + sin(chem14), chem3 < chem7, chem3 < chem6 + sin(chem14))), (chem3, True)))"
18,4.4965806,0.0391899137197709,"(((max(5.025322 / (chem6 - chem3), 1.9829259) / log(chem13)) + (chem5 * chem3)) - chem4) + chem3","chem3*chem5 + chem3 - chem4 + Piecewise((1.9829259, 5.025322/(-chem3 + chem6) < 1.9829259), (5.025322/(-chem3 + chem6), True))/log(chem13)","PySRFunction(X=>chem3*chem5 + chem3 - chem4 + Piecewise((1.9829259, 5.025322/(-chem3 + chem6) < 1.9829259), (5.025322/(-chem3 + chem6), True))/log(chem13))"
19,4.4726443,0.005337441549784749,"(((max(5.025322 / (chem6 - chem3), sqrt(chem8)) / log(chem13)) + (chem5 * chem3)) - chem4) + chem3","chem3*chem5 + chem3 - chem4 + Piecewise((sqrt(chem8), sqrt(chem8) > 5.025322/(-chem3 + chem6)), (5.025322/(-chem3 + chem6), True))/log(chem13)","PySRFunction(X=>chem3*chem5 + chem3 - chem4 + Piecewise((sqrt(chem8), sqrt(chem8) > 5.025322/(-chem3 + chem6)), (5.025322/(-chem3 + chem6), True))/log(chem13))"
20,4.441141,0.007068474302913475,"(((max(5.025322 / (chem6 - chem3), 1.9829259) / log(chem13)) + (chem5 * chem3)) - chem4) + (chem3 - chem10)","-chem10 + chem3*chem5 + chem3 - chem4 + Piecewise((1.9829259, 5.025322/(-chem3 + chem6) < 1.9829259), (5.025322/(-chem3 + chem6), True))/log(chem13)","PySRFunction(X=>-chem10 + chem3*chem5 + chem3 - chem4 + Piecewise((1.9829259, 5.025322/(-chem3 + chem6) < 1.9829259), (5.025322/(-chem3 + chem6), True))/log(chem13))"
