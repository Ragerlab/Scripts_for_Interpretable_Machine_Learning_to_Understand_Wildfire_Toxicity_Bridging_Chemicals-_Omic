complexity,loss,score,equation,sympy_format,lambda_format
1,51.839153,0.0,chem6,chem6,PySRFunction(X=>chem6)
2,21.37168,0.8860790320542306,sqrt(2775.1602),52.6797892934283,PySRFunction(X=>52.6797892934283)
3,13.952848,0.4263830359856231,10.554176 * chem6,10.554176*chem6,PySRFunction(X=>10.554176*chem6)
5,2.7096767,0.8194271581270889,chem2 * (chem6 * 3.0972064),chem2*chem6*3.0972064,PySRFunction(X=>chem2*chem6*3.0972064)
7,1.8127358,0.2009960665226736,((chem6 * chem2) * 2.9329796) + chem15,chem15 + chem6*chem2*2.9329796,PySRFunction(X=>chem15 + chem6*chem2*2.9329796)
9,1.5984817,0.06289147730854251,"max(chem15, chem2) - (-2.8792682 * (chem6 * chem2))","-(-1)*2.8792682*chem2*chem6 + Piecewise((chem2, chem15 < chem2), (chem15, True))","PySRFunction(X=>-(-1)*2.8792682*chem2*chem6 + Piecewise((chem2, chem15 < chem2), (chem15, True)))"
11,1.5836871,0.004649252609619876,"((chem2 * (chem6 - 0.065964736)) * 2.9141479) + max(chem2, chem15)","chem2*(chem6 - 1*0.065964736)*2.9141479 + Piecewise((chem15, chem15 > chem2), (chem2, True))","PySRFunction(X=>chem2*(chem6 - 1*0.065964736)*2.9141479 + Piecewise((chem15, chem15 > chem2), (chem2, True)))"
12,1.4515272,0.08713949245802562,"max(chem15 - cos(chem15), chem2) - ((chem2 * chem6) * -2.8780131)","-(-2.8780131)*chem2*chem6 + Piecewise((chem2, chem2 > chem15 - cos(chem15)), (chem15 - cos(chem15), True))","PySRFunction(X=>-(-2.8780131)*chem2*chem6 + Piecewise((chem2, chem2 > chem15 - cos(chem15)), (chem15 - cos(chem15), True)))"
13,1.4142619,0.026008473982618584,"(((max(chem6, chem15 - 1.6216812) + chem6) + chem6) * chem2) + 1.5866736","chem2*(chem6 + chem6 + Piecewise((chem15 - 1*1.6216812, chem6 < chem15 - 1*1.6216812), (chem6, True))) + 1.5866736","PySRFunction(X=>chem2*(chem6 + chem6 + Piecewise((chem15 - 1*1.6216812, chem6 < chem15 - 1*1.6216812), (chem6, True))) + 1.5866736)"
14,1.3551242,0.04271465891192464,"((max(chem2, sqrt(chem15)) * (chem6 - 0.065964736)) * 2.9141479) + max(chem2, chem15)","2.9141479*(chem6 - 0.065964736)*Piecewise((sqrt(chem15), chem2 < sqrt(chem15)), (chem2, True)) + Piecewise((chem15, chem15 > chem2), (chem2, True))","PySRFunction(X=>2.9141479*(chem6 - 0.065964736)*Piecewise((sqrt(chem15), chem2 < sqrt(chem15)), (chem2, True)) + Piecewise((chem15, chem15 > chem2), (chem2, True)))"
15,1.2656914,0.06827457651360098,"(chem2 * ((max((chem2 - chem15) / -0.7292092, chem6) + chem6) + chem6)) + 1.5754883","chem2*(chem6 + chem6 + Piecewise((chem6, chem6 > (-chem15 + chem2)/(-0.7292092)), ((-chem15 + chem2)/(-0.7292092), True))) + 1.5754883","PySRFunction(X=>chem2*(chem6 + chem6 + Piecewise((chem6, chem6 > (-chem15 + chem2)/(-0.7292092)), ((-chem15 + chem2)/(-0.7292092), True))) + 1.5754883)"
16,1.2656913,7.900820354764829e-08,"(chem2 * ((chem6 + max((chem2 - chem15) / sin(-0.8171246), chem6)) + chem6)) + 1.5751072","chem2*(chem6 + chem6 + Piecewise((chem6, chem6 > (-chem15 + chem2)/sin(-0.8171246)), ((-chem15 + chem2)/sin(-0.8171246), True))) + 1.5751072","PySRFunction(X=>chem2*(chem6 + chem6 + Piecewise((chem6, chem6 > (-chem15 + chem2)/sin(-0.8171246)), ((-chem15 + chem2)/sin(-0.8171246), True))) + 1.5751072)"
17,1.2252579,0.032467102675420544,"((chem2 * ((chem6 + max(chem6, (chem2 - chem15) / -0.72118574)) + chem6)) + chem10) + chem10","chem10 + chem10 + chem2*(chem6 + chem6 + Piecewise(((-chem15 + chem2)/(-0.72118574), chem6 < (-chem15 + chem2)/(-0.72118574)), (chem6, True)))","PySRFunction(X=>chem10 + chem10 + chem2*(chem6 + chem6 + Piecewise(((-chem15 + chem2)/(-0.72118574), chem6 < (-chem15 + chem2)/(-0.72118574)), (chem6, True))))"
18,1.1935809,0.02619340412187387,"(chem2 * ((chem6 + max((chem2 - chem15) / -0.73343885, chem6)) + chem6)) + (sqrt(chem15) * chem10)","chem10*sqrt(chem15) + chem2*(2*chem6 + Piecewise((chem6, chem6 > 1.36344018318637*chem15 - 1.36344018318637*chem2), (1.36344018318637*chem15 - 1.36344018318637*chem2, True)))","PySRFunction(X=>chem10*sqrt(chem15) + chem2*(2*chem6 + Piecewise((chem6, chem6 > 1.36344018318637*chem15 - 1.36344018318637*chem2), (1.36344018318637*chem15 - 1.36344018318637*chem2, True))))"
19,1.1689272,0.020871543226968686,"chem10 + ((chem2 * 0.9761118) * ((chem6 - -0.5762663) + (max((chem2 - chem15) / -0.7175538, chem6) + chem6)))","chem10 + chem2*0.9761118*(chem6 + chem6 + Piecewise((chem6, chem6 > (-chem15 + chem2)/(-0.7175538)), ((-chem15 + chem2)/(-0.7175538), True)) - 1*(-0.5762663))","PySRFunction(X=>chem10 + chem2*0.9761118*(chem6 + chem6 + Piecewise((chem6, chem6 > (-chem15 + chem2)/(-0.7175538)), ((-chem15 + chem2)/(-0.7175538), True)) - 1*(-0.5762663)))"
