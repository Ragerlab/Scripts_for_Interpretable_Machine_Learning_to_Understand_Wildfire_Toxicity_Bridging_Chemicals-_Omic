complexity,loss,score,equation,sympy_format,lambda_format
1,75.74725,0.0,1.3475299,1.34752990000000,PySRFunction(X=>1.34752990000000)
2,74.21639,0.02041712483140816,sqrt(chem3),sqrt(chem3),PySRFunction(X=>sqrt(chem3))
3,6.66615,2.4099425333861135,chem3 * chem5,chem3*chem5,PySRFunction(X=>chem3*chem5)
5,2.4446642,0.5015673549506338,(chem5 * chem3) + 6.2016807,chem3*chem5 + 6.2016807,PySRFunction(X=>chem3*chem5 + 6.2016807)
7,2.3248696,0.025121910268199567,"(chem3 * chem5) + min(chem3, 6.4729986)","chem3*chem5 + Piecewise((chem3, chem3 < 6.4729986), (6.4729986, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem3, chem3 < 6.4729986), (6.4729986, True)))"
8,2.0961928,0.10354120448365055,(chem5 * chem3) + (16.592115 / sqrt(chem12)),chem3*chem5 + 16.592115/sqrt(chem12),PySRFunction(X=>chem3*chem5 + 16.592115/sqrt(chem12))
10,1.9495991,0.03624949263284331,(sqrt(chem3 / chem12) / 0.17077507) + (chem3 * chem5),chem3*chem5 + 5.85565562936089*sqrt(chem3/chem12),PySRFunction(X=>chem3*chem5 + 5.85565562936089*sqrt(chem3/chem12))
11,1.9241236,0.013153170351216662,((chem3 / chem12) / 0.37643287) + (3.053713 + (chem3 * chem5)),chem3*chem5 + 3.053713 + chem3/(0.37643287*chem12),PySRFunction(X=>chem3*chem5 + 3.053713 + chem3/(0.37643287*chem12))
12,1.832178,0.04896516824026948,"max(sqrt(chem3 / chem12) / 0.17077464, chem15) + (chem3 * chem5)","chem3*chem5 + Piecewise((chem15, chem15 > 5.85567037354024*sqrt(chem3/chem12)), (5.85567037354024*sqrt(chem3/chem12), True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem15, chem15 > 5.85567037354024*sqrt(chem3/chem12)), (5.85567037354024*sqrt(chem3/chem12), True)))"
14,1.8097304,0.006163769598406951,"max(sqrt(chem3 / chem12) / 0.17077464, chem15 + chem10) + (chem3 * chem5)","chem3*chem5 + Piecewise((chem10 + chem15, chem10 + chem15 > 5.85567037354024*sqrt(chem3/chem12)), (5.85567037354024*sqrt(chem3/chem12), True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem10 + chem15, chem10 + chem15 > 5.85567037354024*sqrt(chem3/chem12)), (5.85567037354024*sqrt(chem3/chem12), True)))"
15,1.8090696,0.00036520393906520654,"max(sqrt(chem3 / chem12) / 0.17077464, chem15 + cos(chem3)) + (chem3 * chem5)","chem3*chem5 + Piecewise((chem15 + cos(chem3), chem15 + cos(chem3) > 5.85567037354024*sqrt(chem3/chem12)), (5.85567037354024*sqrt(chem3/chem12), True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem15 + cos(chem3), chem15 + cos(chem3) > 5.85567037354024*sqrt(chem3/chem12)), (5.85567037354024*sqrt(chem3/chem12), True)))"
16,1.7143632,0.053770980257034265,"(chem3 * chem5) + ((max(chem3 / chem12, cos(chem3) + chem10) / 0.28504857) + 1.7311277)","chem3*chem5 + Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True))/0.28504857 + 1.7311277","PySRFunction(X=>chem3*chem5 + Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True))/0.28504857 + 1.7311277)"
17,1.7022514,0.007089971889709926,"(chem3 * chem5) + ((max(chem3 / chem12, cos(chem3) + chem10) / 0.28504857) + sqrt(chem7))","chem3*chem5 + sqrt(chem7) + 3.50817406310791*Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True))","PySRFunction(X=>chem3*chem5 + sqrt(chem7) + 3.50817406310791*Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True)))"
18,1.6698197,0.019236071293220344,"(chem3 * chem5) + ((min(max(chem3 / chem12, cos(chem3) + chem10), chem7) / 0.28504857) + 1.7311277)","chem3*chem5 + Piecewise((Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True)), ITE(chem10 + cos(chem3) > chem3/chem12, chem7 > chem10 + cos(chem3), chem7 > chem3/chem12)), (chem7, True))/0.28504857 + 1.7311277","PySRFunction(X=>chem3*chem5 + Piecewise((Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True)), ITE(chem10 + cos(chem3) > chem3/chem12, chem7 > chem10 + cos(chem3), chem7 > chem3/chem12)), (chem7, True))/0.28504857 + 1.7311277)"
20,1.6673833,0.0007300725885934357,"(min(min(chem7, 2.4861217), chem13) + (chem3 * chem5)) + (max(chem3 / chem12, chem10 + cos(chem3)) / 0.3246084)","chem3*chem5 + Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True))/0.3246084 + Piecewise((Piecewise((chem7, chem7 < 2.4861217), (2.4861217, True)), ITE(chem7 < 2.4861217, chem13 > chem7, chem13 > 2.4861217)), (chem13, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem10 + cos(chem3), chem10 + cos(chem3) > chem3/chem12), (chem3/chem12, True))/0.3246084 + Piecewise((Piecewise((chem7, chem7 < 2.4861217), (2.4861217, True)), ITE(chem7 < 2.4861217, chem13 > chem7, chem13 > 2.4861217)), (chem13, True)))"
