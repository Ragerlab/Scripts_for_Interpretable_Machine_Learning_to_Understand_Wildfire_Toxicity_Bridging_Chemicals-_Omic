complexity,loss,score,equation,sympy_format,lambda_format
1,73.131004,0.0,chem6,chem6,PySRFunction(X=>chem6)
3,8.139311,1.0977734377335464,chem3 * chem5,chem3*chem5,PySRFunction(X=>chem3*chem5)
5,5.0319095,0.2404529991787871,(chem5 * chem3) + 6.397627,chem3*chem5 + 6.397627,PySRFunction(X=>chem3*chem5 + 6.397627)
7,4.9152,0.011733544904293331,((chem5 + 0.27857864) * chem3) + chem13,chem13 + chem3*(chem5 + 0.27857864),PySRFunction(X=>chem13 + chem3*(chem5 + 0.27857864))
8,4.888863,0.0053726834176858725,sin(chem12) + ((chem3 * chem5) + 6.3215146),chem3*chem5 + sin(chem12) + 6.3215146,PySRFunction(X=>chem3*chem5 + sin(chem12) + 6.3215146)
9,4.763586,0.025959015159822747,"((chem3 * chem5) + max(chem6, chem13)) + chem14","chem14 + chem3*chem5 + Piecewise((chem13, chem13 > chem6), (chem6, True))","PySRFunction(X=>chem14 + chem3*chem5 + Piecewise((chem13, chem13 > chem6), (chem6, True)))"
11,4.5808945,0.01955323061018686,"(chem13 + (chem3 * chem5)) + min(chem6, chem14 * chem8)","chem13 + chem3*chem5 + Piecewise((chem6, chem6 < chem14*chem8), (chem14*chem8, True))","PySRFunction(X=>chem13 + chem3*chem5 + Piecewise((chem6, chem6 < chem14*chem8), (chem14*chem8, True)))"
13,4.5168743,0.007037028326291953,"((chem13 + (chem3 * chem5)) - chem11) + min(chem6, chem14 * chem8)","-chem11 + chem13 + chem3*chem5 + Piecewise((chem6, chem6 < chem14*chem8), (chem14*chem8, True))","PySRFunction(X=>-chem11 + chem13 + chem3*chem5 + Piecewise((chem6, chem6 < chem14*chem8), (chem14*chem8, True)))"
14,4.3595643,0.035448106905866715,"(chem5 * chem3) + max(chem6 + (cos(chem13 * chem3) * chem13), chem13)","chem3*chem5 + Piecewise((chem13, chem13 > chem13*cos(chem13*chem3) + chem6), (chem13*cos(chem13*chem3) + chem6, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem13, chem13 > chem13*cos(chem13*chem3) + chem6), (chem13*cos(chem13*chem3) + chem6, True)))"
16,4.154254,0.02411962585337752,"(chem5 * chem3) + max(chem6 + (cos(min(chem13, chem9) * chem3) * chem13), chem13)","chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > chem13*cos(chem13*chem3) + chem6, chem13 > chem13*cos(chem3*chem9) + chem6)), (chem13*cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True))) + chem6, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > chem13*cos(chem13*chem3) + chem6, chem13 > chem13*cos(chem3*chem9) + chem6)), (chem13*cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True))) + chem6, True)))"
18,4.0419807,0.013699012680986115,"(chem5 * chem3) + max(chem6 + ((cos(min(chem13, chem9) * chem3) * 1.3209572) * chem13), chem13)","chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > 1.3209572*chem13*cos(chem13*chem3) + chem6, chem13 > 1.3209572*chem13*cos(chem3*chem9) + chem6)), (cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True)))*1.3209572*chem13 + chem6, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > 1.3209572*chem13*cos(chem13*chem3) + chem6, chem13 > 1.3209572*chem13*cos(chem3*chem9) + chem6)), (cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True)))*1.3209572*chem13 + chem6, True)))"
19,4.0177946,0.006001698980206916,"(chem5 * chem3) + max(chem6 + ((cos(min(chem13, chem9) * chem3) * log(chem6)) * chem13), chem13)","chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > chem13*log(chem6)*cos(chem13*chem3) + chem6, chem13 > chem13*log(chem6)*cos(chem3*chem9) + chem6)), (chem13*log(chem6)*cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True))) + chem6, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > chem13*log(chem6)*cos(chem13*chem3) + chem6, chem13 > chem13*log(chem6)*cos(chem3*chem9) + chem6)), (chem13*log(chem6)*cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True))) + chem6, True)))"
20,4.005772,0.0029968241300240748,"(chem5 * chem3) + max(chem6 + ((cos(min(chem13, chem9) * chem3) * sqrt(sqrt(chem6))) * chem13), chem13)","chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > chem13*chem6**(1/4)*cos(chem13*chem3) + chem6, chem13 > chem13*chem6**(1/4)*cos(chem3*chem9) + chem6)), (chem13*chem6**(1/4)*cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True))) + chem6, True))","PySRFunction(X=>chem3*chem5 + Piecewise((chem13, ITE(chem13 < chem9, chem13 > chem13*chem6**(1/4)*cos(chem13*chem3) + chem6, chem13 > chem13*chem6**(1/4)*cos(chem3*chem9) + chem6)), (chem13*chem6**(1/4)*cos(chem3*Piecewise((chem13, chem13 < chem9), (chem9, True))) + chem6, True)))"
